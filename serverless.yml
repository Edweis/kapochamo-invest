
service: kapochamo-invest
package:
  individually: true

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}
  region: ap-southeast-1
  environment:
    SOME_VAR: some value...

  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - 'lambda:InvokeFunction'
      Resource: '*'

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
    packager: 'npm' # Packager that will be used to package your external modules
  warmup:
    enabled: true
    events:
      - schedule: rate(5 minutes)
    prewarm: true
    concurrency: 1
  prune:
    automatic: true
    number: 5 # Number of versions to keep


functions:
  testMe:
    handler: src/functions/testFunc.default
    description: Test lambda
    events:
      - http: GET hello

resources:
  Resources:
    EmailNotification:
      Type: AWS::SNS::Topic
      Properties:
        DisplayName: Email Notification
        TopicName: EmailNotification
        Subscription:
          - Protocol: email
            Endpoint: rulliere.francois+kapochamo@gmail.com

    EventRule:
      Type: AWS::Events::Rule
      Properties:
        Description: "Send email on lambda notification"
        EventPattern:
          source:
            - "aws.lambda"
        State: "ENABLED"
        Targets:
          - Arn:
              Fn::GetAtt: TestMeLambdaFunction.Arn # Reference testMe lambda
            Id: "testLambda"



plugins:
  - serverless-webpack
  - serverless-plugin-warmup
  - serverless-prune-plugin
